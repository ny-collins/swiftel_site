/*
  1. DEFINE OUR COLOR PALETTE AS CSS VARIABLES.
  We define light mode colors by default in :root.
*/
:root {
  --color-bg: 244 244 245; /* neutral-100 */
  --color-bg-card: 255 255 255; /* white */
  --color-text: 24 24 27; /* neutral-900 */
  --color-text-muted: 82 82 91; /* neutral-600 */
  --color-border: 228 228 231; /* neutral-200 */
  
  --color-primary: 10 116 218; /* #0A74DA */
  --color-primary-dark: 8 93 170; /* #085DAA */
  --color-accent: 23 201 210; /* #17C9D2 */
  --color-accent-dark: 18 161 168; /* #12A1A8 */
  --color-secondary-accent: 231 199 20; /* #e7c714 */
}

/*
  2. DEFINE THE 'dark' THEME. 
*/
html.dark {
  --color-bg: 24 24 27; /* neutral-950 */
  --color-bg-card: 39 39 42; /* neutral-800 */
  --color-text: 245 245 245; /* neutral-100 */
  --color-text-muted: 161 161 170; /* neutral-400 */
  --color-border: 63 63 70; /* neutral-700 */
}

/* 3. IMPORT TAILWIND */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* 4. ALL CUSTOM CSS, NOW USING OUR VARIABLES
*/

/* Hero grid background */
.grid-background {
  background-color: rgb(var(--color-bg));
  background-image:
    repeating-linear-gradient(to right, rgba(var(--color-border), 0.3) 0, rgba(var(--color-border), 0.3) 1px, transparent 1px, transparent 40px),
    repeating-linear-gradient(to bottom, rgba(var(--color-border), 0.3) 0, rgba(var(--color-border), 0.3) 1px, transparent 1px, transparent 40px);
  background-size: 40px 40px;
}

/* SVG Animations */
.wifi-svg { animation: glow 3s infinite alternate ease-in-out; }
.wifi-svg path { opacity: 0; animation-name: wave; animation-duration: 2.5s; animation-timing-function: ease-in-out; animation-iteration-count: infinite; }
.wifi-svg path:nth-of-type(3) { animation-delay: 0s; }
.wifi-svg path:nth-of-type(2) { animation-delay: 0.2s; }
.wifi-svg path:nth-of-type(1) { animation-delay: 0.4s; }
.wifi-svg circle { opacity: 1; }
@keyframes glow { from { filter: drop-shadow(0 0 10px rgba(var(--color-accent), 0.4)); } to { filter: drop-shadow(0 0 25px rgba(var(--color-accent), 0.8)); } }
@keyframes wave { 0% { opacity: 0.2; } 50% { opacity: 1; } 100% { opacity: 0.2; } }

/* Scroll Indicator */
.indicator-container { display: flex; justify-content: center; align-items: center; gap: 0.75rem; }
.indicator-dot { width: 0.75rem; height: 0.75rem; border-radius: 9999px; background-color: rgb(var(--color-border)); transition: all 0.3s; border: none; cursor: pointer; }
.indicator-dot.active { width: 2rem; background-color: rgb(var(--color-accent)); }

/* Package Toggle */
.package-toggle-container {
  display: flex;
  gap: 1rem;
  position: relative;
  z-index: 10;
}
.toggle-button {
  display: inline-flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  border-radius: 9999px;
  font-weight: 600;
  color: rgb(var(--color-text-muted));
  background-color: rgba(var(--color-text), 0.05); /* Faint tint */
  border: 1px solid rgb(var(--color-border));
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}
.toggle-button.active {
  background-color: rgb(var(--color-primary));
  color: white; /* Text on primary button should always be white */
  border-color: rgb(var(--color-primary));
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}
.toggle-button:not(.active):hover {
  transform: translateY(-2px);
  color: rgb(var(--color-text));
  border-color: rgba(var(--color-border), 0.7);
}
.wiggle svg { animation: wiggle 0.4s ease-in-out; }
@keyframes wiggle { 0%, 100% { transform: rotate(0deg); } 25% { transform: rotate(8deg); } 75% { transform: rotate(-8deg); } }

/* "Our Journey" Timeline */
.timeline-container {
  position: relative;
  max-width: 48rem;
  margin: 0 auto;
}
.timeline-container::after {
  content: '';
  position: absolute;
  width: 3px;
  background-color: rgb(var(--color-border));
  top: 8px;
  bottom: 8px;
  left: 50%;
  margin-left: -1.5px;
}
.timeline-item {
  padding: 1rem 2.5rem;
  position: relative;
  width: 50%;
}
.timeline-item::after {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: rgb(var(--color-bg));
  border: 4px solid rgb(var(--color-primary));
  top: 24px;
  border-radius: 50%;
  z-index: 1;
}
.timeline-item:nth-child(odd) { left: 0; text-align: right; }
.timeline-item:nth-child(odd)::after { right: -10px; }
.timeline-item:nth-child(even) { left: 50%; text-align: left; }
.timeline-item:nth-child(even)::after { left: -10px; }
.timeline-year {
  font-size: 1.25rem;
  font-weight: 700;
  color: rgb(var(--color-accent));
  margin-bottom: 0.5rem;
}
@media screen and (max-width: 768px) {
  .timeline-container::after { left: 20px; }
  .timeline-item { width: 100%; left: 0 !important; padding-left: 50px; padding-right: 1rem; text-align: left !important; }
  .timeline-item::after { left: 10px !important; }
}

/* Contact Form */
.form-input {
  display: block;
  width: 100%;
  /* UPDATED: Changed from --color-bg to --color-bg-card */
  background-color: rgb(var(--color-bg-card));
  border: 1px solid rgb(var(--color-border));
  border-radius: 0.5rem;
  padding: 0.75rem 1rem;
  color: rgb(var(--color-text));
  transition: all 0.2s;
}
.form-input:focus {
  outline: none;
  border-color: rgb(var(--color-primary));
  box-shadow: 0 0 0 2px rgba(var(--color-primary), 0.5);
}
.submit-button {
  width: 100%;
  background-color: rgb(var(--color-primary));
  color: white;
  font-weight: 600;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
  transition: background-color 0.2s;
}
.submit-button:hover { background-color: rgb(var(--color-primary-dark)); }
.submit-button:disabled { background-color: rgb(var(--color-border)); cursor: not-allowed; }
.success-message {
  width: 100%;
  background-color: rgba(var(--color-accent), 0.1);
  color: rgb(var(--color-accent));
  text-align: center;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
  border: 1px solid rgb(var(--color-accent));
}

/* Article Card */
.article-card-link { display: block; height: 100%; }
.article-card-link > div { display: flex; flex-direction: column; }

/* Markdown Article Styles */
.prose { max-width: 65ch; margin-left: auto; margin-right: auto; }
.prose h1 { @apply text-4xl lg:text-5xl font-extrabold text-primary mb-8; }
.prose h2 { @apply text-3xl lg:text-4xl font-bold text-DEFAULT mt-12 mb-6 border-b border-DEFAULT pb-2; }
.prose h3 { @apply text-2xl font-bold text-DEFAULT mt-8 mb-4; }
.prose p, .prose ul, .prose li { @apply text-lg text-muted leading-relaxed; }
.prose p { @apply mb-6; }
.prose ul { @apply list-disc list-outside pl-6 mb-6 space-y-2; }
.prose table { @apply w-full table-auto border-collapse border border-DEFAULT mb-6; }
.prose th { @apply bg-card border border-DEFAULT p-3 text-left font-bold text-DEFAULT; }
.prose td { @apply border border-DEFAULT p-3; }

/* 404 Glitch Effect */
.glitch-text {
  position: relative;
  text-shadow: 0 0 5px rgba(var(--color-primary), 0.3);
}
.glitch-text::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-shadow: -2px 0 rgb(var(--color-accent));
  animation: glitch-tear-1 2s infinite linear alternate-reverse;
}
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-shadow: 2px 0 rgb(var(--color-secondary-accent));
  animation: glitch-tear-2 3s infinite linear alternate-reverse;
}
@keyframes glitch-shake {
  0% { transform: translate(0, 0); }
  25% { transform: translate(1px, 1px); }
  50% { transform: translate(-1px, -1px); }
  75% { transform: translate(1px, -1px); }
  100% { transform: translate(0, 0); }
}
@keyframes glitch-tear-1 {
  0% { clip-path: inset(10% 0 85% 0); }
  10% { clip-path: inset(40% 0 10% 0); }
  20% { clip-path: inset(90% 0 2% 0); }
  30% { clip-path: inset(25% 0 60% 0); }
  40% { clip-path: inset(5% 0 70% 0); }
  50% { clip-path: inset(80% 0 15% 0); }
  60% { clip-path: inset(10% 0 50% 0); }
  70% { clip-path: inset(60% 0 30% 0); }
  80% { clip-path: inset(95% 0 1% 0); }
  90% { clip-path: inset(30% 0 65% 0); }
  100% { clip-path: inset(10% 0 85% 0); }
}
@keyframes glitch-tear-2 {
  0% { clip-path: inset(70% 0 20% 0); }
  10% { clip-path: inset(10% 0 80% 0); }
  20% { clip-path: inset(40% 0 30% 0); }
  30% { clip-path: inset(60% 0 10% 0); }
  40% { clip-path: inset(80% 0 5% 0); }
  50% { clip-path: inset(20% 0 70% 0); }
  60% { clip-path: inset(50% 0 30% 0); }
  70% { clip-path: inset(1% 0 90% 0); }
  80% { clip-path: inset(25% 0 50% 0); }
  90% { clip-path: inset(75% 0 10% 0); }
  100% { clip-path: inset(70% 0 20% 0); }
}